{"version":3,"sources":["../node_modules/enter-view/enter-view.min.js","../node_modules/text-balancer/text-balancer.js","../config.json","script.js"],"names":["module","exports","USE_EYE_NAV","USE_COVER_HED","DOC_URL","navbar","document","getElementById","hamburgerTrigger","classList","toggle","selector","offset","enter","remove","exit","add","textBalancer","balanceText","pageNum","parseInt","getAttribute"],"mappings":"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","file":"script.39b65ce9.js","sourceRoot":"../src","sourcesContent":["\"use strict\";!function(e){\"function\"==typeof define&&define.amd?define(e):\"undefined\"!=typeof module&&module.exports?module.exports=e():window.enterView=e.call(this)}(function(){var e=function(e){function n(){E=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame||function(e){return setTimeout(e,1e3/60)}}function t(){if(y&&\"number\"==typeof y){var e=Math.min(Math.max(0,y),1);return F-e*F}return F}function o(){var e=document.documentElement.clientHeight,n=window.innerHeight||0;F=Math.max(e,n)}function r(){L=!1;var e=t();M=M.filter(function(n){var t=n.getBoundingClientRect(),o=t.top,r=t.bottom,i=t.height,s=o<e,u=r<e;if(s&&!n.__ev_entered){if(m(n),n.__ev_progress=0,h(n,n.__ev_progress),q)return!1}else!s&&n.__ev_entered&&(n.__ev_progress=0,h(n,n.__ev_progress),g(n));if(s&&!u){var d=(e-o)/i;n.__ev_progress=Math.min(1,Math.max(0,d)),h(n,n.__ev_progress)}return s&&u&&1!==n.__ev_progress&&(n.__ev_progress=1,h(n,n.__ev_progress)),n.__ev_entered=s,!0}),M.length||window.removeEventListener(\"scroll\",i,!0)}function i(){L||(L=!0,E(r))}function s(){o(),r()}function u(){o(),r()}function d(e){for(var n=e.length,t=[],o=0;o<n;o+=1)t.push(e[o]);return t}function f(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;return\"string\"==typeof e?d(n.querySelectorAll(e)):e instanceof NodeList?d(e):e instanceof Array?e:void 0}function c(){M=f(v)}function a(){window.addEventListener(\"resize\",s,!0),window.addEventListener(\"scroll\",i,!0),window.addEventListener(\"load\",u,!0),s()}function _(){return v?(c(),M&&M.length?(n(),a(),void r()):(console.error(\"no selector elements found\"),!1)):(console.error(\"must pass a selector\"),!1)}var v=e.selector,l=e.enter,m=void 0===l?function(){}:l,w=e.exit,g=void 0===w?function(){}:w,p=e.progress,h=void 0===p?function(){}:p,x=e.offset,y=void 0===x?0:x,A=e.once,q=void 0!==A&&A,E=null,L=!1,M=[],F=0;_()};return e});","var candidates = [];\n\n// pass in a string of selectors to be balanced.\n// if you didnt specify any, thats ok! We'll just\n// balance anything with the balance-text class\nvar textBalancer = function (selectors) {\n\n    if (!selectors) {\n        candidates = document.querySelectorAll('.balance-text');\n    } else {\n        createSelectors(selectors);\n    }\n\n    balanceText();\n\n    var rebalanceText = debounce(function() {\n        balanceText();\n    }, 100);\n\n    window.addEventListener('resize', rebalanceText);\n}\n\n// this populates our candidates array with dom objects\n// that need to be balanced\nvar createSelectors = function(selectors) {\n    selectorArray = selectors.split(',');\n    for (var i = 0; i < selectorArray.length; i += 1) {\n        var currentSelectorElements = document.querySelectorAll(selectorArray[i].trim());\n\n        for (var j = 0; j < currentSelectorElements.length; j += 1) {\n            var currentSelectorElement = currentSelectorElements[j];\n            candidates.push(currentSelectorElement);\n        }\n    }\n}\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nvar debounce = function (func, wait, immediate) {\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n};\n\n\n// HELPER FUNCTION -- initializes recursive binary search\nvar balanceText = function () {\n    var element;\n    var i;\n\n    for (i = 0; i < candidates.length; i += 1) {\n        element = candidates[i];\n\n        if (textElementIsMultipleLines(element)) {\n            element.style.maxWidth = '';\n            squeezeContainer(element, element.clientHeight, 0, element.clientWidth);\n        }\n\n    }\n\n}\n\n// Make the element as narrow as possible while maintaining its current height (number of lines). Binary search.\nvar squeezeContainer = function (element, originalHeight, bottomRange, topRange) {\n    var mid;\n    if (bottomRange >= topRange) {\n        element.style.maxWidth = topRange + 'px';\n        return;\n    }\n    mid = (bottomRange + topRange) / 2;\n    element.style.maxWidth = mid + 'px';\n\n    if (element.clientHeight > originalHeight) {\n        // we've squoze too far and element has spilled onto an additional line; recurse on wider range\n        squeezeContainer(element, originalHeight, mid+1, topRange);\n    } else {\n        // element has not wrapped to another line; keep squeezing!\n        squeezeContainer(element, originalHeight, bottomRange+1, mid);\n    }\n}\n\n// function to see if a headline is multiple lines\n// we only want to break if the headline is multiple lines\n//\n// We achieve this by turning the first word into a span\n// and then we compare the height of that span to the height\n// of the entire headline. If the headline is bigger than the\n// span by 10px we balance the headline.\nvar textElementIsMultipleLines = function (element) {\n    var firstWordHeight;\n    var elementHeight;\n    var HEIGHT_OFFSET;\n    var elementWords;\n    var firstWord;\n    var ORIGINAL_ELEMENT_TEXT;\n\n    ORIGINAL_ELEMENT_TEXT = element.innerHTML;\n\n    // usually there is around a 5px discrepency between\n    // the first word and the height of the whole headline\n    // so subtract the height of the headline by 10 px and\n    // we should be good\n    HEIGHT_OFFSET = 10;\n\n    // get all the words in the headline as\n    // an array -- will include punctuation\n    //\n    // this is used to put the headline back together\n    elementWords = element.innerHTML.split(' ');\n\n    // make span for first word and give it an id\n    // so we can access it in le dom\n    firstWord = document.createElement('span');\n    firstWord.id = 'element-first-word';\n    firstWord.innerHTML = elementWords[0];\n\n    // this is the entire headline\n    // as an array except for first word\n    //\n    // we will append it to the headline after the span\n    elementWords = elementWords.slice(1);\n\n    // empty the headline and append the span to it\n    element.innerHTML = '';\n    element.appendChild(firstWord);\n\n    // add the rest of the element back to it\n    element.innerHTML += ' ' + elementWords.join(' ');\n\n    // update the first word variable in the dom\n    firstWord = document.getElementById('element-first-word');\n\n    firstWordHeight = firstWord.offsetHeight;\n    elementHeight = element.offsetHeight;\n    // restore the original element text\n    element.innerHTML = ORIGINAL_ELEMENT_TEXT;\n\n    // compare the height of the element and the height of the first word\n    return elementHeight - HEIGHT_OFFSET > firstWordHeight;\n\n} // end headlineIsMultipleLines\n\nexports.balanceText = textBalancer;","module.exports={USE_EYE_NAV:!0,USE_COVER_HED:!0,DOC_URL:\"https://docs.google.com/document/d/14M5Qrl5R0kvWIxxp4PSmv7MugpkfV5WHVLCNvMQcK-k/edit\"};","import enterView from 'enter-view';\nimport textBalancer from 'text-balancer';\n\nimport { USE_COVER_HED } from '../config.json';\n\n// Fade in navbar at scroll trigger\n\nconst navbar = document.getElementById('navbar');\nenterView({\n  selector: USE_COVER_HED ? '.headline' : '.step-deck',\n  offset: USE_COVER_HED ? 1 : 0.957,\n  enter: () => {\n    navbar.classList.remove('only-logo');\n  },\n  exit: () => {    \n    navbar.classList.remove('show-nav-links');\n    navbar.classList.add('only-logo');\n  },\n});\n\n// Mobile navbar hamburger trigger\n\nexport function hamburgerTrigger() {\n  navbar.classList.toggle('show-nav-links');\n}\n\n// Text balance headline and deck\n\ntextBalancer.balanceText('.headline, .deck, .image-overlay .image-caption-text, .annote-text');\n\n// Highlight nav link\n\nconst pageNum = parseInt(document.getElementById('body-page-container').getAttribute('data-page-num'));\ndocument.getElementById('nav-link-' + pageNum).classList.add('nav-link-highlighted');\n"]}